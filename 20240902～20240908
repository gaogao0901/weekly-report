# 週報　2024/09/02 ~ 2024/09/08

## 目標
バックエンドエンジニアとして自社開発企業に内定をもらう

# マイルストーン
-2024/1/26

1on1ミーティング(１回目)</br></br>
-2024/1/29~2024/3/29

・Intermediate
・Backend Project 1
・Git
・Frontend 1
・Frontend Team Dev
・Backend Project 2
・Backend Project 2 Team Dev
・Frontend project 4
-2024/3/29~2024/5/14

・Advanced CS
・OOP
・Database
・Backend Project 3

   
## 今週の予定：やる予定だったこと・目標
- Task1
    - Frontend Project 1(10h)
    
- Task2
    - Intermediate(10h)
    
## 今週やったこと：実際にやったこと・実稼働
- Task1
    - Frontend Project 1(10h)(進行中_48%)
    
- Task2
    - Intermediate(30h)(着手完了_100%)
    
## タスクの進捗について

- Task1
    - オンスケ。
    
- Task2
    - 着手完了。既に完了していたが、期間が空いたためオブジェクト・リストの単元の復習を行いました。

## 所感・学び
> ### タビュレーションとメモ化
> 今週の学習では、タビュレーション（テーブル化）とメモ化（キャッシュ）の技法に焦点を当て、これらがどのように再帰的な問題解決や動的計画法に応用されるかを深く理解しました。
> 
> - **タビュレーション（テーブル化）**  
>   タビュレーションは、問題を小さな部分問題に分解し、それらの部分問題の解をテーブルに格納する手法です。
> 
> - **メモ化（キャッシュ）**  
>   メモ化は、再帰的な関数呼び出しにおいて、計算結果をキャッシュに保存する技法です。
> 
> - **メリット**
>   - **重複計算の削減**: 同じ部分問題に対する複数の呼び出しがあった場合、メモ化により一度計算した結果を再利用できるため、計算時間が大幅に短縮されます。
>   - **動的計画法の一部**: メモ化は、動的計画法の一部として利用され、再帰的な問題解決において特に効果的です。再帰的な呼び出しが多い場合、メモ化を用いることでパフォーマンスを大幅に改善できます。

> ### 連想配列とHashMap
> 連想配列（Associative Array）とHashMapは、データをキーとバリューのペアで管理するデータ構造で、効率的なデータ管理や検索において非常に重要です。
> 
> - **連想配列**  
>   連想配列は、キーとバリューのペアを使用してデータを管理するデータ構造で、キーを用いてデータを迅速に検索・更新できます。
> 
>   - **メリット**
>     - **キーによる検索**: 任意のキーを用いてデータを高速に検索できる。
>     - **柔軟なデータ管理**: キーとバリューのペアでデータを管理するため、さまざまな形式のデータを簡単に取り扱うことができます。
> 
> - **HashMap**  
>   HashMapは、Javaの標準ライブラリに含まれる連想配列の一種で、ハッシュテーブルを使用してデータを管理します。
> 
>   - **メリット**
>     - **高速な操作**: ハッシュテーブルを使用することで、データの挿入、検索、削除が平均的にO(1)の時間で行えます。

期間が空いてしまったため、Intermediateの上記内容<オブジェクト・リスト>の単元を復習しました。
またFrontend 1の着手しました。主に業務ではJava<SpringBoot>を使用してAPI作成を行っており、バックエンドの担当がメインのためHTMLのデータをDOMを利用してJavaScriptで表示させる仕組みが学習でき、興味がある単元のため楽しかったです。
Fronttend 1 が完了したらFrontend Team Devとなるため内容をもれなく落とし込んでいこうと思います。
ご教授いただいた内容の通り、無理はせずに継続することを第一として引き続き学習を進めてまいります。
